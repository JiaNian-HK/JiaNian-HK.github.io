<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用Hexo快速建立一个属于你的Blog</title>
      <link href="/2020/03/21/%E5%88%A9%E7%94%A8Hexo%E5%BF%AB%E9%80%9F%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84Blog/"/>
      <url>/2020/03/21/%E5%88%A9%E7%94%A8Hexo%E5%BF%AB%E9%80%9F%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84Blog/</url>
      
        <content type="html"><![CDATA[<p>首先，我们前往</p><h1 id="查阅文档"><a href="#查阅文档" class="headerlink" title="查阅文档"></a>查阅文档</h1><h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">提交问题</a>，我们会尽力解决您的问题。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 <a href="https://hexo.io/zh-cn/docs/#安装-Hexo" target="_blank" rel="noopener">安装 Hexo</a> 步骤。</p><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a>。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Mac 用户</p><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><blockquote><p>Windows 用户</p><p>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p></blockquote><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝 Node.js 镜像</a> 下载。</p><p>其它的安装方法：</p><ul><li>Windows：通过 <a href="https://github.com/jasongin/nvs/" target="_blank" rel="noopener">nvs</a>（推荐）或者<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a> 安装。</li><li>Mac：使用 <a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a> 或 <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> 安装。</li><li>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener">NodeSource</a> 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener">指导</a></li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p><blockquote><p>Windows 用户</p><p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p></blockquote><blockquote><p>For Mac / Linux 用户</p><p>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">由 npmjs 发布的指导</a> 修复该问题。强烈建议 <strong>不要</strong> 使用 root、sudo 等方法覆盖权限</p></blockquote><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><pre><code class="bash">$ npm install -g hexo-cli</code></pre><h3 id="进阶安装和使用"><a href="#进阶安装和使用" class="headerlink" title="进阶安装和使用"></a>进阶安装和使用</h3><p>对于熟悉 npm 的进阶用户，可以仅局部安装 <code>hexo</code> 包。</p><pre><code class="bash">$ npm install hexo</code></pre><p>安装以后，可以使用以下两种方式执行 Hexo：</p><ol><li><p><code>npx hexo</code></p></li><li><p>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo</code>：</p><pre><code class="bash">echo &#39;PATH=&quot;$PATH:./node_modules/.bin&quot;&#39; &gt;&gt; ~/.profile</code></pre></li></ol><hr><h2 id="环境安装完成，开始建站"><a href="#环境安装完成，开始建站" class="headerlink" title="环境安装完成，开始建站"></a>环境安装完成，开始建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre><code class="bash">$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install</code></pre><p>新建完成后，指定文件夹的目录如下：</p><pre><code>.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes</code></pre><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">配置</a> 信息，您可以在此配置大部分的参数。</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>应用程序的信息。<a href="https://ejs.co/" target="_blank" rel="noopener">EJS</a>, <a href="http://learnboost.github.io/stylus/" target="_blank" rel="noopener">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a> renderer 已默认安装，您可以自由移除。</p><pre><code class="bash">package.json{  &quot;name&quot;: &quot;hexo-site&quot;,  &quot;version&quot;: &quot;0.0.0&quot;,  &quot;private&quot;: true,  &quot;hexo&quot;: {    &quot;version&quot;: &quot;&quot;  },  &quot;dependencies&quot;: {    &quot;hexo&quot;: &quot;^3.8.0&quot;,    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,    &quot;hexo-server&quot;: &quot;^0.3.3&quot;  }}</code></pre><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p><a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p><a href="https://hexo.io/zh-cn/docs/themes" target="_blank" rel="noopener">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p><h2 id="配置你的网站"><a href="#配置你的网站" class="headerlink" title="配置你的网站"></a>配置你的网站</h2><p>您可以在 <code>_config.yml</code> 中修改大部分的配置</p><p>当然，这里不具体说明，可以自己看一下</p><p>主要步骤就在这里，那么详细的安装步骤，我们来说明一下</p><h1 id="试用指令创建网站文件夹并且部署到GitHub"><a href="#试用指令创建网站文件夹并且部署到GitHub" class="headerlink" title="试用指令创建网站文件夹并且部署到GitHub"></a>试用指令创建网站文件夹并且部署到GitHub</h1><p>当Node.js、Git、Hexo安装完毕后，我们就要根据自己的喜好建站了</p><p>看上面的文档可能不太理解，那么就实际操作一番</p><p>1）首先，我们打开Git bash.exe</p><p><img src="https://www.67w.top/lingyue/blog/gitexe.png" alt=""></p><pre><code class="bash">$ hexo init Blog #这个“Blog”就是你的网站文件夹，可以自己根据喜好修改</code></pre><p>然后我们cd进入文件夹</p><pre><code class="bash">$ cd Blog </code></pre><p>使用ls指令<code>会输出以下目录结构</code>：</p><pre><code>node_modules：是依赖包public：存放的是生成的页面scaffolds：命令生成文章等的模板source：用命令创建的各种文章themes：主题_config.yml：整个博客的配置db.json：source解析所得到的package.json：项目所需模块项目的配置信息</code></pre><p>接下来执行安装依赖指令</p><p>使用命令<code>npm install</code>安装依赖</p><pre><code class="bash">$ npm install #注意，默认主题是直接在Blog文件夹执行，如果安装了其他主题则要进入对应的主题文件夹！后面会有例子</code></pre><p>使用命令 <code>hexo generate</code> 生成页面</p><pre><code class="bash">$ hexo g #当然，直接输入hexo g 不是更简单么？！？</code></pre><p>使用命令 <code>hexo server</code> 启动服务</p><pre><code class="bash">$ hexo s #同样，直接输入简写hexo s 也一样方便</code></pre><p>然后，你的窗口就会出现这个：</p><pre><code class="bash">$ hexo serverINFO  Start processingINFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></pre><p>这个时候，就代表服务已经启动了，直接前往<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p>即可本地访问你的网站</p><h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><p>显然，即使上面的步骤已经完成了，想要别也可以访问你的站点，你就需要把网站部署到GitHub帮助你来托管网站了，当然不仅仅是GitHub，你还可以用类似的方法部署到Gitee或者是自建的Gitea</p><h4 id="生成SSH添加到github"><a href="#生成SSH添加到github" class="headerlink" title="生成SSH添加到github"></a>生成SSH添加到github</h4><p>1）登录github新建一个仓库，格式为 <code>你的用户名.github.io</code><br>例如 我的用户名为 jianian-hk那么 仓库名应为<code>jianian-hk.github.io</code></p><p>2) 回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）要逐步运行（分成两次回车）</p><pre><code class="bash">git config --global user.name &quot;YourName&quot;git config --global user.email &quot;YourEail&quot;</code></pre><p>3）在gitbash中输入：<code>ssh-keygen -t rsa -C &quot;替换成你的github邮箱&quot;</code> 生成ssh。（注意，一定要是英文双引号！）<br>然后按终端给出的路径的方式找到<code>id_rsa.pub</code>文件 并复制其中的内容。</p><p>4）进到新建的github仓库 点击右上角<code>setting</code>（也就是设置，看图标都能判断出来）进入设置找到<code>Deploy keys</code></p><p>选择 <code>Add Deploy keys</code> Title随便填写 Key的内容为刚才复制的 <code>id_rsa.pub</code>文件中的内容</p><p>5）在gitbash中验证是否添加成功：<code>ssh -T git@github.com</code></p><p><img src="https://www.67w.top/lingyue/blog/githubssh.png" alt=""></p><p>用编辑器打开你的Blog（你的网站文件夹）文件夹，修改<code>_config.yml</code>文件的一些配置(冒号之后都是有一个半角空格的，也就是英文键盘的空格键，不是中文键盘的！)</p><p>把底端的代码替换掉</p><pre><code class="yml">deploy:  type: git  repo: https://github.com/你的Github用户名/你的GitHub用户名.github.io.git  branch: master</code></pre><p>回到gitbash中，进入你的Blog目录，分别执行以下命令</p><pre><code class="bash">npm install hexo-deployer-git --save  #安装部署工具hexo clean   #清除缓存hexo generate    #生成静态文件hexo deploy    #部署到github</code></pre><p>在浏览器中输入<a href="http://yourgithubname.github.io/" target="_blank" rel="noopener">http://你的用户名.github.io</a> 就可以看到你的网站了</p><p>修改根目录下 <code>_config.yml</code> 文件的配置<br><a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官网页面</a><br><code>language zh-CN</code><br><code>timezone Asia/Shanghai</code></p><h1 id="设置主题-obsidian"><a href="#设置主题-obsidian" class="headerlink" title="设置主题-obsidian"></a>设置主题-obsidian</h1><p><a href="https://github.com/TriDiamond/hexo-theme-obsidian/blob/master/README_CN.md" target="_blank" rel="noopener">打开官方主页</a><br>安装</p><p>我们cd进入主题文件夹</p><pre><code class="bash">$ cd themes #这个使用前提是你已经进入了Blog文件夹的情况下才是这个指令哦，没进入blog先进入blog崽执行</code></pre><p>接下来执行主题安装指令（如果想安装其他主题替换成相应的即可）</p><pre><code class="bash">git clone https://github.com/TriDiamond/hexo-theme-obsidian.git obsidian</code></pre><p>接着我们需要启用这个主题<br>打开 Blog目录下配置文件 <code>_config.yml</code>, 设置主题为 <code>obsidian</code></p><pre><code>...theme: obsidian...</code></pre><h2 id="根据文档修改评论插件和代码块样式即可"><a href="#根据文档修改评论插件和代码块样式即可" class="headerlink" title="根据文档修改评论插件和代码块样式即可"></a>根据文档修改评论插件和代码块样式即可</h2><h2 id="添加搜索"><a href="#添加搜索" class="headerlink" title="添加搜索"></a>添加搜索</h2><p>执行这个指令：</p><pre><code class="bash">npm install hexo-generator-search --save</code></pre><p>完成之后，当然就是清理缓存和生成页面启动了</p><pre><code class="bash">$ hexo clean</code></pre><pre><code class="bash">$ hexo g</code></pre><pre><code class="bash">$ hexo s</code></pre><p>好了现在依然访问一下<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p>是不是发现了你的主题也炫酷了呢？</p><p>————————————————————</p><p>一下是一些后来可能需要的操作：</p><h1 id="新建文章测试"><a href="#新建文章测试" class="headerlink" title="新建文章测试"></a>新建文章测试</h1><p>hexo new <code>标题</code><br>编辑 <code>source-- _post</code><br>添加分类、标签、和图片</p><pre><code class="markdown">title: My awesome titledate: 2019-07-14 18:38:45categories:    - 分类1    - 分类2tags:    - 标签1    - 标签2mp3: http://domain.com/awesome.mp3cover: http://domain.com/awesome.jpg</code></pre><h2 id="修改固定连接"><a href="#修改固定连接" class="headerlink" title="修改固定连接"></a>修改固定连接</h2><p>中文链接容易乱码 修改为id<br>默认随机生成，可以指定</p><h2 id="手动设置麻烦，修改文章模板"><a href="#手动设置麻烦，修改文章模板" class="headerlink" title="手动设置麻烦，修改文章模板"></a>手动设置麻烦，修改文章模板</h2><pre><code class="markdown">scaoffolds -- post.md---title: {{ title }}date: {{ date }}categories:    -tags:    -cover:---</code></pre><h2 id="创建分类页和标签页，并修改对应模板"><a href="#创建分类页和标签页，并修改对应模板" class="headerlink" title="创建分类页和标签页，并修改对应模板"></a>创建分类页和标签页，并修改对应模板</h2><p>具体参考官方文档：<a href="https://github.com/TriDiamond/hexo-theme-obsidian/blob/master/README_CN.md" target="_blank" rel="noopener">https://github.com/TriDiamond/hexo-theme-obsidian/blob/master/README_CN.md</a></p><p>好了，教程就到这里了，如果还有什么疑问，添加加年QQ：3210640293</p><p>即可！</p><p>——————————————</p><p>当然，要想写文章，那就要用到md编辑器了，推荐使用Typora，至于怎么下载，百度一下，你就知道！</p><p>写完新文章同样要执行清理缓存、生成页面这两步哦！</p><p>同步到GitHub只需要在这两步后再加一部：</p><pre><code class="bash">$ hexo d</code></pre><p>即可！</p><p>感谢观看！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>齐繁梦</title>
      <link href="/2020/03/20/%E9%BD%90%E7%B9%81%E6%A2%A6/"/>
      <url>/2020/03/20/%E9%BD%90%E7%B9%81%E6%A2%A6/</url>
      
        <content type="html"><![CDATA[<p><code>你走你的阳关道，我追我的齐繁梦</code></p><p> 短暂的一生中，又有多少理想与抱负?</p><p>两年年前，在我还是一个乳臭未干的小孩子时，我遇见了吕</p><p>那时，我们坐的比较近，慢慢的，我们就熟起来了</p><p>我们经常在一起学习交流，一起狂浪</p><p>那时，我们对未来还没有概念，认为，只要一直期待，明天就会到来</p><p>直到有一天</p><p>我们渐渐成长了</p><p>齐繁，一起繁荣，一起进步</p><p>那时，一个小小的梦在两个小孩心中发芽</p><p>“以后，我们一起开公司！”</p><p>这看来似乎过于荒谬</p><p>但我们都很严肃</p><p>从那时以后，我们就把齐繁放在心中，期待它早日绽放</p><p>我们坚信</p><p>只要对梦想向往足够深，就一定会实现</p><p>我们向阳而生</p><p>或许，平凡并不是唯一的答案</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/20/hello-world/"/>
      <url>/2020/03/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
